use std::fs::File;
use std::io::{self, Read};

fn read_der_file(path: &str) -> io::Result<Vec<u8>> {
    let mut file = File::open(path)?;
    let mut bytes = Vec::new();
    file.read_to_end(&mut bytes)?;
    Ok(bytes)
}

fn main() {
    let der_file_path = "./private_key.der";
    match read_der_file(der_file_path) {
        Ok(bytes) => {
            println!("DER file read successfully, byte array length: {}", bytes.len());
            let formatted_vec = format!("vec![{}]", bytes.iter().map(|&x| x.to_string()).collect::<Vec<String>>().join(", "));
            println!("{}", formatted_vec);
        }
        Err(e) => {
            eprintln!("Failed to read DER file: {}", e);
        }
    }
}
